@model ChatWebsiteProjectCSharp.Models.RegisterModel
@{
    Layout = null;
}

<!DOCTYPE html>
<html>

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <link rel="stylesheet" href="~/Content/bootstrap-grid.min.css" type="text/css">
    <link rel="stylesheet" href="~/Content/bootstrap.min.css" type="text/css">
    <link rel="stylesheet" href="~/Content/style.css" type="text/css">
    <title>Register</title>
</head>

<body>
    <div class="container-fluid">
        <div class="containerWebChat">
            <div class="col-md-6 col-lg-4 col-sm-7 col-xl-3 row-container">
                @using (Html.BeginForm("Register","Account", FormMethod.Post)) {
             
                    <div class="text-center">
                        <img class="rounded logo" src="~/image/Chat-2-512.png" />
                        <h1>Create Account</h1>
                    </div>
                    <div class="form-group">
                        <label for="username">Username :</label>
                        @Html.TextBoxFor(s => s.Username,new {
                       @id = "username",
                       @class = "form-control",
                       @placeholder = "Enter your Username"
                   })
                        @Html.ValidationMessageFor(s => s.Username,"",new {
                       @class = "errorMessage",
                   })
                    </div>
                    <div class="form-group">
                        <label for="password">Password :</label>
                        @Html.TextBoxFor(s => s.Password,new {
                       @id = "password",
                       @class = "form-control",
                       @placeholder = "Enter your Password",
                       @type = "password"
                   })
                        @Html.ValidationMessageFor(s => s.Password,"",new {
                       @class = "errorMessage",
                   })
                    </div>
                    <div class="form-group">
                        <label for="repassword">RePassword :</label>
                        @Html.TextBoxFor(s => s.Repassword,new {
                       @id = "repassword",
                       @class = "form-control",
                       @placeholder = "Enter your RePassword",
                       @type = "password"
                   })
                        @Html.ValidationMessageFor(s => s.Repassword,"",new {
                       @class = "errorMessage",
                   })
                    </div>
                    <div class="form-group">
                        <label for="email">Email :</label>
                        @Html.TextBoxFor(s => s.Email,new {
                       @id = "email",
                       @class = "form-control",
                       @placeholder = "Enter your Email",
                       @type = "email"
                   })
                        @Html.ValidationMessageFor(s => s.Email,"",new {
                       @class = "errorMessage",
                   })
                    </div>
                    <div class="form-group">
                        <label for="fullname">Full Name :</label>
                        @Html.TextBoxFor(s => s.Name,new {
                       @id = "fullname",
                       @class = "form-control",
                       @placeholder = "Enter your Name"
                   })
                        @Html.ValidationMessageFor(s => s.Name,"",new {
                       @class = "errorMessage",
                   })
                    </div>
                    <div class="form-group">
                        <label for="date">Date :</label>
                        @Html.TextBoxFor(s => s.Birth,new {
                       @id = "date",
                       @class = "form-control",
                       @type = "date"
                   })
                        @Html.ValidationMessageFor(s => s.Birth,"",new {
                       @class = "errorMessage",
                   })
                    </div>
                    <div class="form-group">
                        <label for="gender">Gender :</label>
                        <br>
                        <div class="custom-control custom-radio custom-control-inline">
                            @Html.RadioButtonFor(model => model.Gender,true,new {
                           @class = "custom-control-input",
                           @id = "customRadio1",
                           @name = "gender"
                       })

                            <label class="custom-control-label" for="customRadio1">Male</label>
                        </div>
                        <div class="custom-control custom-radio custom-control-inline">
                            @Html.RadioButtonFor(model => model.Gender,false,new {
                           @class = "custom-control-input",
                           @id = "customRadio2",
                           @name = "gender"
                       })
                            <label class="custom-control-label" for="customRadio2">Female</label>
                        </div>
                        @Html.ValidationMessageFor(s => s.Gender,"",new {
                       @class = "errorMessage",
                   })
                    </div>
                    <input type="submit" value="Register" class="btn btn-danger btn-block"/>
                    <a href="~/Account/Login" class="btn btn-light btn-block" role="button">Back</a>
                }
            </div>

        </div>
    </div>
</body>
<script type="text/javascript" src="~/scripts/bootstrap.min.js"></script>
<script type="text/javascript" src="~/scripts/jquery.min.js"></script>
<script type="text/javascript" src="~/scripts/popper.min.js"></script>
<script type="text/javascript" src="~/scripts/bootstrap.bundle.min.js"></script>

</html>
